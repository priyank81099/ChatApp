{"version":3,"sources":["../node_modules/keyv/src sync","../node_modules/got/source sync","component/Message.js","component/MessageList.js","component/NewRoomForm.js","component/RoomList.js","component/SendMessageForm.js","Config.js","App.js","Frontpage.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","Message","react_default","a","createElement","className","this","props","text","Component","MessageList","node","ReactDOM","findDOMNode","shouldScrollToBottom","scrollTop","clientHeight","scrollHeight","roomId","messages","map","msg","i","component_Message","key","senderId","NewRoomForm","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","roomName","handleChange","bind","assertThisInitialized","handlesubmit","event","setState","target","value","preventDefault","createRoom","onSubmit","type","placeholder","onChange","RoomList","list","toConsumableArray","rooms","sort","b","room","active","onClick","subToRoom","href","name","SendMessageForm","message","send","disabled","insloc","App","joinableRooms","joinedrooms","sendMessage","getRooms","componentDidMount","_this2","ChatManager","instanceLocator","userId","userName","tokenProvider","TokenProvider","url","connect","then","currentUser","_this3","getJoinableRooms","_this4","subscribeToRoom","hooks","onMessage","concat","_this5","component_RoomList","component_MessageList","component_SendMessageForm","component_NewRoomForm","Frontpage","flag","Chatkit","createUser","src_App_0","class","Boolean","window","location","hostname","match","render","src_Frontpage_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8d97d9a9.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 258;","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 266;","import React,{Component} from 'react';\r\n\r\nclass Message extends Component{\r\n  render(){\r\n  return(\r\n    <div className=\"message\">\r\n      <div className = \"message-username\"> { this.props.id } </div>\r\n      <div className = \"message-text\"> { this.props.text  } </div>\r\n    </div>\r\n  );\r\n}\r\n}\r\nexport default Message;\r\n","import React,{Component} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport Message from './Message';\r\n\r\nclass MessageList extends Component{\r\n\r\n  componentWillUpdate(){\r\n        const node = ReactDOM.findDOMNode(this);\r\n        this.shouldScrollToBottom = node.scrollTop + node.clientHeight + 100 >= node.scrollHeight;\r\n  }\r\n\r\n  componentDidMount(){\r\n    if(this.shouldScrollToBottom){\r\n        const node = ReactDOM.findDOMNode(this);\r\n        node.scrollTop = node.scrollHeight\r\n      }\r\n  }\r\n\r\n  render(){\r\n\r\n      if(!this.props.roomId){\r\n        return(\r\n          <div className=\"message-list\">\r\n            <div className=\"join-room\">\r\n              &larr; Join a room!\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n\r\n      return(\r\n      <div className = \"message-list\">\r\n            {this.props.messages.map( (msg,i) => {\r\n              return(\r\n                <Message key={i} id={msg.senderId} text={msg.text}/>\r\n              );\r\n            }\r\n          )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MessageList;\r\n","import React,{Component} from 'react';\r\n\r\nclass NewRoomForm extends Component{\r\n    constructor(){\r\n        super();\r\n        this.state = {\r\n          roomName : \"\"\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handlesubmit = this.handlesubmit.bind(this);\r\n    }\r\n\r\n    handleChange(event){\r\n        this.setState({\r\n           roomName : event.target.value\r\n        })\r\n    }\r\n\r\n    handlesubmit(event){\r\n        event.preventDefault();\r\n        this.props.createRoom(this.state.roomName);\r\n        this.setState({roomName:\"\"})\r\n    }\r\n\r\n    render(){\r\n      return(\r\n        <div className=\"new-room-form\">\r\n          <form onSubmit={this.handlesubmit}>\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Create a Room\"\r\n              value={this.state.roomName}\r\n              onChange={this.handleChange}/>\r\n            <button id=\"create-room-btn\"> + </button>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\nexport default NewRoomForm;\r\n","import React,{Component} from 'react';\r\n\r\nclass RoomList extends Component{\r\n    render(){\r\n        const list = [...this.props.rooms].sort((a,b)=>a.id-b.id);\r\n        return(\r\n          <div className=\"rooms-list\">\r\n          <ul>\r\n          <h3>Your rooms</h3>\r\n              {list.map( room => {\r\n                const active = this.props.roomId === room.id ? \"active\" : \"\" ;\r\n                  return(\r\n                      <li key={room.id} className={\"room \" + active}>\r\n                          <a\r\n                              onClick={()=>this.props.subToRoom(room.id)}\r\n                              href=\"#\">\r\n                             # {room.name}\r\n                          </a>\r\n                      </li>\r\n                  );\r\n              })}\r\n          </ul>\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default RoomList;\r\n","import React,{Component} from 'react';\r\n\r\nclass SendMessageForm extends Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      message : \"\"\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlesubmit = this.handlesubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      message : event.target.value\r\n    })\r\n  }\r\n\r\n  handlesubmit(event){\r\n    event.preventDefault();\r\n    this.props.send(this.state.message);\r\n    this.setState({\r\n      message : \"\"\r\n    })\r\n  }\r\n\r\n  render(){\r\n    return(\r\n        <form onSubmit={this.handlesubmit} className=\"send-message-form\">\r\n            <input\r\n                placeholder=\"Type your message and press ENTER\"\r\n                type=\"text\"\r\n                disabled = {this.props.disabled}\r\n                onChange={this.handleChange}\r\n                value={this.state.message}\r\n                name=\"message\" />\r\n        </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SendMessageForm;\r\n","const insloc = \"v1:us1:03812b07-f591-4241-94d9-c70ae6650137\";\r\nconst tokanurl = \"https://us1.pusherplatform.io/services/chatkit_token_provider/v1/03812b07-f591-4241-94d9-c70ae6650137/token\";\r\nconst key = \"aa6591e2-60e4-4d4e-a68c-bd6b399fb481:+9NL1S0uJ8LNkdp2+DZU4imP2ZTnDoH+8skzWbVUb8w=\"\r\n\r\nexport {insloc , tokanurl ,key};\r\n","import React,{Component} from 'react';\nimport './App.css';\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\nimport { default as Chatkit } from '@pusher/chatkit-server';\nimport MessageList from './component/MessageList';\nimport NewRoomForm from './component/NewRoomForm';\nimport RoomList from './component/RoomList';\nimport SendMessageForm from './component/SendMessageForm';\nimport {insloc , tokanurl ,key } from './Config';\n\n\nclass App extends Component{\n\n  constructor(){\n    super();\n    this.state = {\n       roomId : null ,\n       messages : [] ,\n       joinableRooms : [] ,\n       joinedrooms : [] ,\n    }\n    this.sendMessage = this.sendMessage.bind(this);\n    this.subToRoom = this.subToRoom.bind(this);\n    this.getRooms = this.getRooms.bind(this);\n    this.createRoom = this.createRoom.bind(this);\n    this.componentDidMount = this.componentDidMount.bind(this);\n  }\n\n  componentDidMount(){\n      const chatManager = new ChatManager({\n        instanceLocator: insloc,\n        userId: this.props.userName,\n        tokenProvider: new TokenProvider({ url: tokanurl })\n      })\n\n    chatManager.connect()\n       .then(currentUser => {\n          this.currentUser = currentUser;\n          this.getRooms();\n       })\n  }\n\n  getRooms(){\n    this.currentUser.getJoinableRooms()\n    .then(joinableRooms => {\n        this.setState({\n          joinableRooms : joinableRooms ,\n          joinedrooms : this.currentUser.rooms\n        })\n    })\n  }\n\n  subToRoom(roomId){\n          this.setState({\n            messages : []\n          })\n\n          this.currentUser.subscribeToRoom({\n                roomId : roomId,\n                hooks:{\n                  onMessage: message => {\n                     this.setState({\n                       messages : [...this.state.messages , message]\n                     })\n                  }\n                }\n          })\n\n          .then( room => {\n            this.setState({ roomId : room.id});\n            this.getRooms();\n          })\n  }\n\n  sendMessage(text){\n    this.currentUser.sendMessage({\n      text : text,\n      roomId: this.state.roomId\n    });\n  }\n\n  createRoom(roomName){\n     this.currentUser.createRoom({\n        name: roomName\n     })\n     .then( room => this.subToRoom(room.id))\n  }\n\n  render(){\n      return(\n      <div className=\"app\">\n\n        <RoomList\n            roomId={this.state.roomId}\n            subToRoom={this.subToRoom}\n            rooms={[...this.state.joinedrooms , ...this.state.joinableRooms]}/>\n\n        <MessageList\n            roomId = {this.state.roomId}\n            messages = {this.state.messages}/>\n\n        <SendMessageForm\n            disabled = {!this.state.roomId}\n            send = {this.sendMessage}/>\n\n        <NewRoomForm createRoom={this.createRoom}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React,{Component} from 'react';\r\nimport App from './App';\r\nimport { ChatManager, TokenProvider } from '@pusher/chatkit-client';\r\nimport { default as Chatkit } from '@pusher/chatkit-server';\r\nimport {insloc , tokanurl ,key } from './Config';\r\nimport './Frontpage.css'\r\nclass Frontpage extends Component{\r\n\r\n  constructor(){\r\n    super();\r\n    this.state = {\r\n      name : \"\",\r\n      flag : true\r\n    }\r\n    this.handleChange = this.handleChange.bind(this);\r\n    this.handlesubmit = this.handlesubmit.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n    this.setState({\r\n      name : event.target.value\r\n    })\r\n  }\r\n\r\n  handlesubmit(event){\r\n    const chatkit = new Chatkit({\r\n    instanceLocator: insloc,\r\n    key: key\r\n    })\r\n\r\n    chatkit.createUser({\r\n    id: this.state.name,\r\n    name: this.state.name\r\n    })\r\n\r\n    this.setState({\r\n      flag : false\r\n    })\r\n  }\r\n  render(){\r\n    if(this.state.flag===false){\r\n      return(\r\n        <App userName={this.state.name}/>\r\n      )\r\n    }\r\n    return (\r\n\r\n      <div class='container'>\r\n        <div class='window'>\r\n          <div class='overlay'></div>\r\n          <div class='content'>\r\n            <div class='welcome'>Hello There!</div>\r\n            <br/><br/>\r\n            <div class='subtitle'> Before using our services you need to create an account.</div>\r\n            <div class='input-fields'>\r\n              <br/><br/>\r\n              <input type='text' placeholder='Username' class='input-line full-width' value={this.state.name} onChange={this.handleChange}></input>\r\n            <br/><br/><br/><br/>\r\n            <div><button class='ghost-round full-width' onClick={this.handlesubmit}>Enter</button></div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      </div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nexport default Frontpage;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Frontpage from './Frontpage';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Frontpage />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}